version: '3.8'

services:
  # Primary PostgreSQL database (production-like)
  postgres-primary:
    image: postgres:15-alpine
    container_name: querybird-postgres-primary
    environment:
      POSTGRES_DB: querybird_prod
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin_password_123
      POSTGRES_INITDB_ARGS: '--encoding=UTF-8 --lc-collate=C --lc-ctype=C'
    ports:
      - '5432:5432'
    volumes:
      - postgres_primary_data:/var/lib/postgresql/data
      - ./init-scripts/init-primary.sql:/docker-entrypoint-initdb.d/01-init-primary.sql
    networks:
      - querybird-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U admin -d querybird_prod']
      interval: 10s
      timeout: 5s
      retries: 5

  # Secondary PostgreSQL database (staging-like)
  postgres-staging:
    image: postgres:15-alpine
    container_name: querybird-postgres-staging
    environment:
      POSTGRES_DB: querybird_staging
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin_password_123
      POSTGRES_INITDB_ARGS: '--encoding=UTF-8 --lc-collate=C --lc-ctype=C'
    ports:
      - '5433:5432'
    volumes:
      - postgres_staging_data:/var/lib/postgresql/data
      - ./init-scripts/init-staging.sql:/docker-entrypoint-initdb.d/01-init-staging.sql
    networks:
      - querybird-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U admin -d querybird_staging']
      interval: 10s
      timeout: 5s
      retries: 5

  # MySQL database
  mysql-test:
    image: mysql:8.0
    container_name: querybird-mysql-test
    environment:
      MYSQL_ROOT_PASSWORD: root_password_123
      MYSQL_DATABASE: querybird_mysql
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin_password_123
    ports:
      - '3306:3306'
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-scripts/init-mysql.sql:/docker-entrypoint-initdb.d/01-init-mysql.sql
    networks:
      - querybird-network
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'admin', '-padmin_password_123']
      interval: 10s
      timeout: 5s
      retries: 5
    command: --default-authentication-plugin=mysql_native_password

  # pgAdmin for PostgreSQL management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: querybird-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@querybird.test
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - '8080:80'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./init-scripts/pgadmin-servers.json:/pgadmin4/servers.json
    networks:
      - querybird-network
    depends_on:
      postgres-primary:
        condition: service_healthy
      postgres-staging:
        condition: service_healthy

  # phpMyAdmin for MySQL management (optional)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: querybird-phpmyadmin
    environment:
      PMA_HOST: mysql-test
      PMA_PORT: 3306
      PMA_USER: admin
      PMA_PASSWORD: admin_password_123
      MYSQL_ROOT_PASSWORD: root_password_123
    ports:
      - '8081:80'
    networks:
      - querybird-network
    depends_on:
      mysql-test:
        condition: service_healthy

volumes:
  postgres_primary_data:
  postgres_staging_data:
  mysql_data:
  pgadmin_data:

networks:
  querybird-network:
    driver: bridge
# Create init scripts directory and files
# These will be created when you run the compose file
